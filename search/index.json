[{"content":"任务一：设置关键文件的权限 /etc/passwd 文件权限设置 解析：/etc/passwd 文件存储用户账户的基本信息，需要所有用户可读，root 用户可写。权限值 644 中，6 表示所有者（root）有读（4）和写（2）权限，44 表示组用户和其他用户只有读权限。 命令： chmod 644 /etc/passwd\n1 chmod 644 /etc/passwd /etc/shadow 文件权限设置 解析：/etc/shadow 文件存储用户密码的加密信息，为了安全，只有 root 用户可读。权限值 400 中，4 表示所有者（root）有读权限，组用户和其他用户没有任何权限。 命令：chmod 400 /etc/shadow\n1 chmod 400 /etc/shadow /etc/group 文件权限设置 解析：/etc/group 文件存储用户组的信息，需要所有用户组可读，root 用户可写。权限值 644 中，6 表示所有者（root）有读（4）和写（2）权限，44 表示组用户和其他用户只有读权限。 命令：chmod 644 /etc/group\n1 chmod 644 /etc/group 关键执行命令说明 解析：chmod [-R] xyz [关键文件] 中，-R 选项表示递归修改目录及其子目录和文件的权限，xyz 是权限设定值（如 644、400 等），[关键文件] 是要修改权限的文件或目录名。\n任务二：设置关键文件夹的权限 查看文件和目录权限 解析：ls -al 命令用于列出文件和目录的详细信息，包括权限、所有者、所属组等，且会列出隐藏文件。\n/etc/init.d 目录权限设置 解析：建议只保留 root 用户对 /etc/init.d 目录下所有文件和目录的读、写和执行权限。chmod -R 700 /etc/init.d 中，-R 表示递归操作，700 表示所有者（root）有读（4）、写（2）和执行（1）权限，组用户和其他用户没有任何权限。\n1 chmod -R 700 /etc/init.d 关键执行命令说明 解析：chmod [-R] xyz [重要目录] ， -R 选项用于递归修改目录及其子目录和文件权限，xyz 是权限设定值（如 700 ），[重要目录] 是要修改权限的目录名。\n任务三：设置关键文件夹的属性 查看文件隐藏属性 lsattr [-d] [文件或目录名] 解析：lsattr 命令用于查看文件或目录的隐藏属性。-d 选项表示如果参数是目录，仅显示目录本身的属性，而不是目录内文件的属性。 修改文件隐藏属性 chattr [+/-属性] [文件或目录名] 解析：chattr 命令用于设置文件或目录的隐藏属性。+ 表示添加属性，- 表示移除属性。 操作说明 使 /var/log/messages 只读 命令：chattr +a /var/log/messages 1 chattr +a /var/log/messages 解析：+i 属性表示设置文件为不可更改，即不能删除、修改、重命名等操作，从而实现只读效果。 2. 使轮循的 /var/log/messages. 文件不可更改* 命令：chattr +i /var/log/messages.*\n1 chattr +i /var/log/messages.* 解析：同样使用 +i 属性，让所有以 /var/log/messages. 开头的文件不可更改。 3. /etc/shadow 文件不可更改 命令：chattr +i /etc/shadow\n1 chattr +i /etc/shadow 解析：/etc/shadow 存储用户密码等敏感信息，通过 +i 属性防止其被非法修改。 4. /etc/passwd 文件不可更改 命令：chattr +i /etc/passwd\n1 chattr +i /etc/passwd 解析：/etc/passwd 包含用户账户的基本信息，设置 i 属性可避免文件被恶意修改，维护系统用户信息稳定。 5. /etc/group 文件不可更改 命令：chattr +i /etc/group 解析：/etc/group 存储用户组信息，添加 +i 属性避免被恶意篡改。\n建议管理员对关键文件进行特殊设置（不可更改或只能追加等） 例如设置只能追加： 命令：chattr +a [关键文件] 解析：+a 属性表示文件只能追加内容，不能删除、修改已有的内容，适用于日志等只需要不断添加新记录的文件。 关键执行命令 lsattr [文件或目录名] （用于查看隐藏属性）和 chattr [+/-属性] [文件或目录名] （用于修改隐藏属性） 。\n任务四：设置公共目录属性 参考配置操作 查看重要文件和目录权限命令 ls： -l 解析：该命令用于列出文件和目录的详细信息，其中包括权限信息。比如会显示文件所有者、所属组以及其他用户对文件或目录的读（r）、写（w）、执行（x）权限情况。\n操作说明 对于 /tmp 和 /var/tmp 目录： 命令：\n1 2 3 4 5 6 #/tmp 和 /var/tmp 目录供所有用户暂时存取文件，每位用户皆拥有完整的权限进入该目录，去浏览、删除和移动文件的权限，同时应保证用户所属文件只允许用户自己操作，其他用户不具备操作改文件或目录的权限。 chmod +t /tmp chmod +t /var/tmp chmod 1777 /tmp chmod 1777 /var/tmp 解析： chmod +t 表示设置粘滞位（sticky bit）。在设置了粘滞位的目录中，即便用户对该目录有写权限，也只能删除或移动自己拥有的文件，不能删除或移动其他用户的文件 。 chmod 1777 中，第一个数字 1 代表设置了粘滞位，后面的 777 分别表示文件所有者、所属组和其他用户都拥有读（4）、写（2）和执行（1）权限，即所有用户都能完全访问该目录，但因为有粘滞位，用户只能操作自己的文件。\n关键执行命令 chmod [-R] xyz [重要目录] 解析： -R 选项表示递归操作，即对指定目录及其子目录和文件都进行权限设置。 xyz 是权限设定值，例如上面用到的 1777，不同数字组合代表不同的权限分配。 [重要目录] 是需要设置权限的目录名称，如 /tmp 、/var/tmp 等。\n任务五：设置umask值 查看 umask 值 查看八进制值：打开终端，输入umask，回车就能看到当前 umask 的八进制数值。 查看文字格式：输入umask -p ，回车后会以文字方式显示 umask 值，如umask 0002 。 查看符号格式：输入umask -S ，回车后以符号形式展示权限，例如u=rwx,g=rx,o=rx。 临时设置 umask 值 在终端中输入umask加想要设置的八进制值，比如要设置为022，就输入umask 022 ，回车后设置立即生效。\n永久设置 umask 值（针对单个用户） 编辑 shell 配置文件，如果你用的是 bash shell，编辑.bashrc或.bash_profile文件，命令如下： 编辑.bashrc：vim ~/.bashrc 编辑.bash_profile：vim ~/.bash_profile 在文件末尾添加umask [你想要的值]，比如umask 027 。 保存文件后，让配置生效，执行命令：source ~/.bashrc 或source ~/.bash_profile。 永久设置 umask 值（针对所有用户） 编辑系统全局配置文件，如/etc/profile或/etc/bashrc，命令如下： 编辑/etc/profile：sudo vim /etc/profile 编辑/etc/bashrc：sudo vim /etc/bashrc 在文件合适位置添加umask [你想要的值]，比如umask 027 。 保存文件后，重新登录系统或重启电脑使设置生效。 一.参考配置操作 查看 /etc/profile 文件 使用 more 命令：在终端输入 more /etc/profile ，按空格键逐页查看内容，查找是否有 umask 相关内容。若找到，会显示类似 umask 022 这样设置权限掩码的语句。 使用 cat 命令：在终端输入 cat /etc/profile ，该命令会一次性显示文件全部内容，可快速浏览查找 umask 。 若需要编辑查看，使用 vim 命令：在终端输入 vim /etc/profile ，进入 vim 编辑器后，输入 /umask 并回车，可快速定位到包含 umask 的行。 查看 /etc/csh.login 文件 more 命令：终端输入 more /etc/csh.login 进行逐页查看。 cat 命令：终端输入 cat /etc/csh.login 查看全部内容。 vim 命令：终端输入vim /etc/csh.login ，进入编辑器后用 /umask 定位。 查看 /etc/csh.cshrc 文件 more 命令：在终端执行more /etc/csh.cshrc。 cat 命令：在终端执行 cat /etc/csh.cshrc 。 vim 命令：在终端执行 vim /etc/csh.cshrc ，进入后用 /umask 查找。 查看 /etc/bashrc 文件 more 命令：终端输入 more /etc/bashrc 。 cat 命令：终端输入 cat /etc/bashrc 。 vim 命令：终端输入 vim /etc/bashrc ，进入后用 /umask 快速定位。 通过以上步骤，就能检查这些文件中是否包含 umask 值。 二操作说明： 编辑.bash_profile：vim ~/.bash_profile 在文件末尾添加umask 027 。 保存文件后，让配置生效，执行命令：source ~/.bashrc 或source ~/.bash_profile。\n三关键执行命令 在文件末尾添加umask [你想要的值] 任务六：使用PAM禁止任何人su为root 配置 PAM（可插拔身份认证模块）文件 使用 vim 编辑器打开 /etc/pam.d/su 文件，命令为 vim /etc/pam.d/su 。 1 `vim /etc/pam.d/su 在文件中找到类似以下配置： auth required pam_wheel.so use_uid\n这行配置的作用是设置只有属于 wheel 组且使用 uid 验证的用户，才能通过 su 命令切换为 root 。auth 表示认证管理；required 意味着该模块必须成功通过，整个认证才会成功；pam_wheel.so 是 PAM 模块，use_uid 是模块参数。 如果文件中没有这行配置，可以手动添加进去。保存并退出 vim 编辑器（按 Esc 键，输入 :wq 回车）。 2. 设置全局登录配置 在终端中执行命令 echo \u0026quot;SU_WHEEL_ONLY yes\u0026quot; \u0026gt;\u0026gt; /etc/login.defs ，这会将 SU_WHEEL_ONLY yes 这一行追加到 /etc/login.defs 文件中。这个配置的作用是进一步限制只有 wheel 组的用户才能使用 su 命令切换到 root 。\n1 echo \u0026#34;SU_WHEEL_ONLY yes \u0026gt;\u0026gt; /etc/login.defs 将用户添加到 wheel 组 假设要将用户 username 添加到 wheel 组，使用命令 usermod -aG wheel username 。这里 -a 选项表示追加用户到组，-G 指定目标组为 wheel 。 添加完成后，该用户就可以使用 su 命令切换为 root 用户（前提是知道 root 密码或该用户自己的密码，取决于 su 的配置）。 通过以上步骤，就完成了只有 wheel 组成员能使用 su 命令切换为 root 用户的配置。 1 2 3 4 5 6 7 8 9 10 11 useradd testuser cat /etc/passwd usermod -aG wheel sxvtc su testuser su #输入密码 #提示：permission denied exit su sxvtc #输入密码 #登录成功 ","date":"2025-03-16T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA%E7%AD%96%E7%95%A5/a_hu_1646600591702f9.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA%E7%AD%96%E7%95%A5/","title":"Linux文件系统安全加固策略"},{"content":"文件ACL与文件系统安全配置 一、ACL（访问控制列表） ‌概念‌： ACL用于设定单一用户针对文件的权限，提供了比传统属主、属组和其他人三种身份更精细的权限管理。 ‌查看ACL支持情况‌： 提前增加两个用户，用于测试ACL 1 2 3 useradd：增加账户 id：查看账户信息 passwd：修改账户密码 在Linux系统中，通过dmesg | grep -i acl命令可以查看内核挂载时是否支持ACL。\n1 dmesg | grep -i acl o\t目前ACL几乎已经预设加入在所有常见的Linux文件系统的挂载参数中（如ext2/ext3/ext4/xfs等）。 3.\t‌创建测试文件并对之前创建的用户设置ACL‌：\n1 2 3 4 5 6 7 8 9 10 11 12 13 mkdir /data touch /data/acl_test1 cd /data ll #-rw-r--r--. 1 root root 0 3月 8 00:05 acl_test1 #drwxr-xr-x. 3 root root 4096 2月 26 00:24 ext4 #drwxrw-r--. 2 bin users 18 3月 2 07:18 testfile setfacl -m u:testuser:w acl_test1\t# 这里注意对于testuser账户仅设置w权限 ll #-rw-rw-r--+ 1 root root 0 3月 8 00:05 acl_test1 #drwxr-xr-x. 3 root root 4096 2月 26 00:24 ext4 #drwxrw-r--. 2 bin users 18 3月 2 07:18 testfile o\t使用setfacl命令可以为文件或目录设置特定用户或群组的权限。 o\t例如：setfacl -m u:testuser:w acl_test1表示为用户testuser设置对文件acl_test1的写权限。 4.\t‌查看ACL设置‌： o\t使用getfacl命令可以查看文件或目录的ACL设置情况。\n1 getfacl acl_test1 file: acl_test1\t\u0026lt;=== 文件名 owner: root\t\u0026lt;=== 拥有者 group: root\t\u0026lt;=== 所属群组 user::rw-\t\u0026lt;=== 拥有者的权限 user:testuser:rw-\t\u0026lt;=== testuser的权限 group::r\u0026ndash;\t\u0026lt;=== 群组的权限 mask::rw-\t\u0026lt;=== 预设的权限 other::r\u0026ndash;\t\u0026lt;=== 其他人的权限\n‌测试ACL效果‌： o\t通过不同账户尝试访问设置了ACL的文件或目录，可以验证ACL权限设置的效果。 1 2 3 4 5 6 su testuser cat /data/acl_test1 #cat: /data/acl_test1: 权限不够 su testu #cat /data/acl_test1 这是一个测试文件 二、AIDE（高级入侵检测环境） ‌概念‌： o\tAIDE是一个入侵检测工具，主要用于检查文档的完整性。 o\t通过比较文件的校验码（如MD5或SHA256）与系统基准数据库中的校验码，可以快速识别出被篡改的文件。 ‌安装与配置‌： o\tAIDE可以通过包管理器（如yum）进行安装。 1 yum install aide -y o\t安装后需要配置aide.conf文件，指定要监控的文件和目录。 3.\t‌生成基准数据库‌： o\t使用aide -c /etc/aide.conf \u0026ndash;init命令可以生成系统基准数据库。 o\t在生成数据库时，可以根据需要注释掉一些路径以缩短生成时间，但在真实环境下不建议全部注释。 4.\t‌检验效果‌： o\t修改受监控的文件后，使用aide \u0026ndash;check命令可以检验出文件系统的变化。 o\tAIDE会报告哪些文件被添加、删除或更改，并提供详细的校验码信息以便进一步分析。\n三、总结 •\tACL能够实现更为精细的权限管理，通过为特定用户或群组设置权限，提高了文件系统的安全性。 •\tAIDE是一个有效的入侵检测工具，通过检查文件的完整性可以快速识别出潜在的入侵行为。 •\t结合使用ACL和AIDE，可以进一步增强文件系统的安全性和稳定性。\n任务实施 任务一：ACL配置与管理 ‌在根目录/下创建名为data的目录。‌ 1 sudo mkdir /data ‌在/data目录下创建名为acl_test的文件。‌ 1 sudo touch /data/acl_test ‌增加两个账户，分别名为testuser1、testuser2。‌ 1 2 sudo useradd testuser1 sudo useradd testuser2 ‌查看testuser1、testuser2的id属性。‌ 1 2 id testuser1 id testuser2 ‌对testuser1、testuser2分别设置密码。‌ 1 2 sudo passwd testuser1 sudo passwd testuser2 ‌利用dmesg查看linux内核下ACL相关内容（具体命令可见本机ppt）。‌ 1 dmesg | grep acl ‌将acl_test文件中其他人权限设置为0。‌ 1 sudo setfacl -m d:u::rwx,d:g::rx,d:o:: /data/acl_test ‌设置ACL，将testuser1权限设置为7。‌ 1 2 sudo setfacl -m u:testuser1:rwx /data/acl_test ‌分别切换到testuser1、testuser2账户下去读取acl_test文件。‌ 1 2 3 4 5 su - testuser1 cat /data/acl_test su - testuser2 cat /data/acl_test 任务二：文件系统安全 ‌安装AIDE。（若无法安装请更换国内镜像源）‌\n1 2 sudo apt-get update sudo apt-get install aide ‌在/data目录下创建名为aide_test的文件。‌ 1 sudo touch /data/aide_test ‌配置AIDE主配置文件，将/data/aide_test文件放入。‌ 编辑 /etc/aide.conf 文件，将 /data/aide_test 添加到配置中。\n‌生成并定义AIDE基准数据库‌ 1 2 sudoaide --init sudoaide --update ‌在/data/aide_test文件中写入内容。‌ 1 echo \u0026#34;Test content\u0026#34; \u0026gt; /data/ ‌利用AIDE检查文件修改情况。‌ 1 sudoaide --check ","date":"2025-03-16T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/%E6%96%87%E4%BB%B6acl%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/a_hu_db5381e34ffbfdc3.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/%E6%96%87%E4%BB%B6acl%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE/","title":"文件ACL与文件系统安全配置"},{"content":"磁盘配额 一、内容概览 该网页为《操作系统安全与管理》课程中的一部分，主要围绕“磁盘配额”这一主题展开。内容涵盖了任务概述、相关知识、任务实施以及任务总结四个部分。\n二、任务概述 ‌背景‌：某公司专注于教材开发及教学资源建设，随着公司发展，员工增多，出现员工利用公司数据存放空间存放与公司业务无关的数据，以及黑客恶意投放大容量数据的问题，造成公司数据传输拥堵。 ‌目标‌：作为公司管理员，利用磁盘限额功能减少相关事件发生率。 ‌任务环境‌：未具体给出服务器操作系统版本及网络配置信息。 三、相关知识 ‌Quota的用途‌： 针对WWW server：限制每个人的网页空间容量。 针对mail server：限制每个人的邮件空间。 针对file server：限制每个人最大的可用网络硬盘空间，以及限制某一群组所能使用的最大磁盘配额。 ‌Quota的使用限制‌： 仅能针对整个filesystem在EXT档案系统家族中进行设计。 核心必须支持quota功能。 只对一般身份使用者有效，root不能设定quota。 若启用SELinux，预设情况下quota仅能针对/home进行设定。 ‌软限制/硬限制‌：未具体展开，但提到了这两个概念。 四、任务实施 ‌前置环境准备‌：插入新硬盘，分区，初始化为ext4文件系统，并挂载到/data/ext4目录下。 ‌检查磁盘配额命令是否存在‌：使用quota -h命令，若不存在则安装quota软件包。 ‌启用系统磁盘配额功能‌：编辑/etc/fstab文件，添加usrquota和grpquota选项，并重启系统。 ‌创建配额文件‌：使用quotacheck -cvug /data/ext4命令。 ‌设置用户和组的磁盘配额‌：使用edquota -u [username]命令为用户设置配额。 ‌启动和关闭磁盘配额‌：使用quotaon -avug和quotaoff -avug命令。 ‌生成磁盘空间使用情况报告‌：使用repquota /dev/sdb1命令。 ‌ext4与XFS文件系统在磁盘配额命令上的区别‌：未具体展开，但提到了这两个文件系统。 五、任务总结 磁盘配额能够有效控制个人、群组数据空间使用情况，保证公司数据存储合理，同时能够有效杜绝特定的网络安全攻击。\n任务实施 任务一：磁盘配额配置与管理 ‌启用系统磁盘配额功能‌：通过编辑/etc/fstab文件，为相应文件系统添加usrquota和grpquota选项，并重启系统。 重新挂载该分区使配置生效 找到类似下面这行，添加 usrquota,grpquota 1 2 3 vim /etc/fstab /dev/sda3 /data ext4 defaults,usrquota,grpquota 0 0 mount -o remount /data 在挂载选项中添加 usrquota （用户配额）和 grpquota （组配额）。例如\n1 ：/dev/sda2 /home ext4 defaults,usrquota,grpquota 0 0 ‌创建配额文件‌：使用quotacheck命令扫描文件系统并创建配额文件。-c 表示创建新文件，-u 表示检查用户配额，-g 表示检查组配额 ，-m 表示以读写方式挂载文件系统 1 quotacheck -cugm /data ‌设置用户和组的磁盘配额‌：利用edquota命令为指定用户和组设置磁盘使用限制。 1 2 edquota -u testuser edquota -g testgroup ‌启用磁盘配额‌：通过quotaon命令启用配额功能。，-a 表示启用所有在 /etc/fstab 中配置了配额选项的分区，-u 启用用户配额，-g 启用组配额 1 quotaon -avug ‌查看磁盘配额使用情况‌：使用repquota或quota命令查看配额使用情况。 1 2 quota testuser repquota -a 任务二：加密文件系统的配置 ‌创建加密盘‌：使用加密工具（如LUKS）创建加密分区。这里创建一个 1GB 的文件示例 1 dd if=/dev/zero of=/home/encrypted_disk bs=1M count=1024 ‌映射加密盘‌：解锁加密分区，生成映射设备。 解锁并映射加密盘，例如将其映射为 my_encrypted_disk： 1 cryptsetup luksOpen /home/encrypted_disk my_encrypted_disk ‌查看映射信息‌：确认加密盘已成功映射。 1 ls /dev/mapper/ ‌格式化加密盘‌：将映射后的设备格式化为所需文件系统。 1 mkfs.ext4 /dev/mapper/my_encrypted_disk ‌创建挂载点并手动挂载加密盘‌：在文件系统中创建挂载点，并使用mount命令挂载加密盘。 1 2 mkdir /mnt/disk mount /dev/mapper/my_encrypted_disk /mnt/disk ‌查看加密文件系统‌：确认加密盘已成功挂载并可使用。 1 df -h ‌设置开机自动挂载加密盘‌：编辑/etc/fstab文件，添加加密盘的自动挂载配置。 1 2 3 4 vim /etc/crypttab my_encrypted_disk /home/encrypted_disk none luks vim /etc/fstab /dev/mapper/my_encrypted_disk /mnt/disk ext4 defaults 0 0 ‌配置开机密码验证‌：确保在开机挂载加密盘时进行密码验证，以增强安全性。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 [Unit] Description=Mount encrypted device %i Requires=dev-mapper-%i.device After=dev-mapper-%i.device [Service] Type=oneshot RemainAfterExit=yes ExecStart=/usr/bin/cryptsetup luksOpen /dev/disk/by - uuid/%i %i ExecStop=/usr/bin/cryptsetup luksClose %i [Install] WantedBy=multi - user.target #重新加载 systemd 配置： systemctl daemon - reload #启用服务： systemctl enable cryptmount@my_encrypted_disk.service ","date":"2025-03-15T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/%E7%A3%81%E7%9B%98%E9%85%8D%E9%A2%9D/a_hu_b0edc3c3d5991b9d.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/%E7%A3%81%E7%9B%98%E9%85%8D%E9%A2%9D/","title":"磁盘配额"},{"content":"Linux特殊权限管理与配置指南 一、权限基础规则 1. 默认权限计算 ==‌目录权限‌==\n777 - umask → 默认权限\n示例：umask 022 → 755（rwxr-xr-x）\n==‌文件权限‌==\n666 - umask → 默认权限\n示例：umask 027 → 640（rw-r\u0026mdash;\u0026ndash;）\n二、特殊权限详解 权限 符号 适用对象 核心功能 SUID s 可执行文件 以文件所有者身份执行程序 SGID s 文件/目录 继承组权限（执行/新建文件） SBIT t 目录 仅允许文件所有者删除内容 三、操作实践指南 1. 权限查看与设置 1 2 3 4 # 查看当前umask umask # 符号化显示权限 umask -S 2.特殊权限配置 1 2 3 4 5 #数字模式 chmod 4755 script.sh # SUID chmod 2770 /shared # SGID chmod 1777 /tmp # SBIT chmod 6755 tool # SUID+SGID组合 1 2 3 4 #符号模式 chmod u+s /bin/admin # 添加SUID chmod g+s /project # 添加SGID chmod o+t /public_data # 添加SBIT 3. 隐藏属性管理 1 2 3 4 5 6 # 查看隐藏属性 lsattr data.txt # 锁定文件（不可修改/删除） chattr +i config.cfg # 解除锁定 chattr -i logfile 四、典型应用场景 权限 应用场景 典型案例 SUID 特权命令执行 /usr/bin/passwd SGID 团队协作目录 /var/team_project SBIT 公共防误删目录 /tmp 五、安全注意事项 ‌权限风险控制‌ SUID/SGID程序需严格审计 避免给普通文件设置特殊权限 ‌显示规则说明‌ ls -l 显示大写 S/T 表示无基础执行权限 ‌系统级防护‌ 隐藏属性操作需 root 权限 关键系统文件建议使用 chattr +i 六、任务实训 在根目录 / 下创建名为 data 的目录 1 2 sudo mkdir /data # 解析：使用mkdir命令创建目录，由于根目录下操作需要root权限，所以加sudo 在 /data 目录下分别创建名为 a、b、c、d、e、f 的 6 个文件文件 1 2 touch /data/a /data/b /data/c /data/d /data/e /data/f # 解析：touch命令可以创建空文件，一次性指定多个文件名即可创建多个文件 将名为 a 的文件设置 SUID 权限 1 2 sudo chmod u+s /data/a # 解析：chmod命令用于修改文件权限，u+s表示为文件所有者设置SUID权限，同样需要root权限 将名为 b 的文件设置 SGID 权限 1 2 sudo chmod g+s /data/b # 解析：g+s表示为文件所属组设置SGID权限 将名为 c 的文件设置 SBIT 权限 1 2 sudo chmod o+t /data/c # 解析：SBIT即粘滞位，使用o+t来设置，仅对目录有效，但这里对文件设置也不会报错，只是无实际意义（正常用于目录防止非所有者删除文件） 将名为 d 的文件设置 SUID、SGID 权限 1 2 sudo chmod u+s,g+s /data/d # 解析：同时设置所有者的SUID权限和所属组的SGID权限 将名为 e 的文件设置 SUID、SGID、SBIT 权限 1 2 sudo chmod u+s,g+s,o+t /data/e # 解析：一次性设置三种特殊权限 将名为 f 的文件设置添加隐藏属性 i 1 2 sudo chattr +i /data/f # 解析：chattr命令用于设置文件的隐藏属性，+i表示设置不可变属性，防止文件被删除、修改等 尝试删除名为 f 的文件（正确情况是此时是无法删除的） 1 2 rm /data/f # 执行此命令会提示权限不够或无法删除，因为文件具有i属性 将名为 f 的文件隐藏属性 i 去除 1 2 sudo chattr -i /data/f # 解析：使用chattr -i来移除不可变属性 设置预设权限为 0244 1 2 umask 0244 # 解析：umask命令用于设置预设权限掩码，0244表示新建文件和目录的默认权限会基于此掩码进行计算 创建名为 hello 的文件 1 2 touch /data/hello # 解析：使用touch创建文件，此时文件权限会受umask影响 创建名为 test 的目录 1 2 mkdir /data/test # 解析：mkdir用于创建目录，目录权限也受umask影响 列出 /data 目录下所有的详细权限信息 1 2 ls -l /data # 解析：ls -l命令以长格式列出目录下的文件和目录的详细权限、所有者、所属组等信息 ","date":"2025-03-15T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/%E7%89%B9%E6%AE%8A%E6%9D%83%E9%99%90%E7%9A%84%E7%AE%A1%E7%90%86%E4%B8%8E%E9%85%8D%E7%BD%AE/a_hu_e49c9adf0fdd11bf.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/%E7%89%B9%E6%AE%8A%E6%9D%83%E9%99%90%E7%9A%84%E7%AE%A1%E7%90%86%E4%B8%8E%E9%85%8D%E7%BD%AE/","title":"特殊权限的管理与配置"},{"content":"排查思路 网络故障排查主要从硬件、网络连接状态、DNS解析、网络服务状态、防火墙配置以及日志这六个关键维度着手。\n知识储备 常用命令工具 网络配置查看：ifconfig可查看网卡配置详情；ip addr能查看网络接口信息，还能指定网卡查询，如ip addr show ens33。 服务管理：systemctl用于服务管理，systemctl start [服务名]启动服务，systemctl stop [服务名]停止服务，systemctl restart [服务名]重启服务，systemctl status [服务名]查看服务状态，systemctl enable [服务名]设置开机自启，systemctl disable [服务名]禁用开机自启。 网络测试：ping [目标地址]测试网络连通性，ping 127.0.0.1检测本地网络协议栈；traceroute [目标地址]跟踪UDP数据报传输路径，定位故障节点。 DNS解析：nslookup [域名]测试DNS解析功能，判断域名能否正确解析为IP地址，如nslookup www.baidu.com。 网络管理：nmcli可进行网络连接的添加、修改、激活等操作，如nmcli con add con-name myconn type ethernet ifname ens33 ip4 192.168.8.110/24 gw4 192.168.8.1添加网络连接。 关键配置文件 主机名相关：/etc/hostname设置静态主机名，/etc/machine-info存放灵活主机名。 网络接口配置：/etc/sysconfig/network-scripts/目录下存放网卡配置文件，如ifcfg-ens33，可通过vim /etc/sysconfig/network-scripts/ifcfg-ens33编辑。 DNS配置：/etc/resolv.conf配置DNS服务器IP地址，用cat /etc/resolv.conf查看。 其他：/etc/hosts实现主机名与IP地址映射；/etc/nsswitch.conf规定域名解析顺序；/etc/services定义端口对应的网络服务；/etc/sysctl.conf控制路由转发功能；/etc/sysconfig/network-scripts/route-ensXX设置静态路由信息。 网络接口命名规则：从RHEL7起，网络接口命名有特定规则。“en”开头代表以太网，“wl”代表无线局域网，“ww”代表无线广域网。后续字符“o”表示主板集成设备，“s”表示热插拔插槽设备，“x”基于MAC地址命名，“p”表示PCI插槽物理位置。 排查步骤 网络连接状态排查 连通性测试：用ping www.baidu.com测试域名连通性，ping 180.101.49.44测试IP地址连通性。若域名不通但IP通，可能是DNS故障；若IP也不通则继续排查。ping 127.0.0.1测试本地网络协议栈，失败则可能网络配置、内核模块或系统服务有问题。 配置查看与修改：通过ifconfig或ip addr查看网络接口配置。临时配置用ip addr add 192.168.1.1/24 dev ens33（按需修改），系统重启或网卡激活后失效。持久配置可通过vim /etc/sysconfig/network-scripts/ifcfg-ens33编辑，或用nmcli命令，配置后需重新载入或激活网卡使配置生效。 DNS解析排查 解析测试：用nslookup www.baidu.com测试域名解析，解析失败可能是DNS服务器配置错误或网络问题。 配置检查：用cat /etc/resolv.conf查看DNS服务器配置，确保nameserver指向有效DNS服务器，如114.114.114.114或本地路由器IP。 网络服务状态排查 服务状态查看：用systemctl status network和systemctl status NetworkManager查看network和NetworkManager服务运行状态。 服务操作：根据情况用systemctl命令对服务进行启动、停止、重启等操作，确保服务正常运行。 故障定位：用traceroute www.baidu.com追踪UDP数据报传输路径，根据每一跳信息定位网络故障位置。 总结 处理网络故障时，要依据排查思路，系统运用各类命令和工具，对网络连接各环节细致检查和测试，精准定位问题并有效修复，保障网络正常运行，确保公司业务顺利开展。\n任务 测试百度网站域名（www.baidu.com）的连通性： 1 ping www.baidu.com 测试环回地址查看网络协议是否正常： ping 127.0.0.1 复制代码 检查网络接口的 IP 地址、子网掩码等配置是否正确： ifconfig ip addr show ens33 复制代码 添加临时生效的网卡配置： ip addr add 192.168.8.110/24 dev ens33 ip addr show ens33 复制代码 添加持久生效的网卡配置： vim /etc/sysconfig/network-scripts/ifcfg-ens33 nmcli con reload nmcli con up ens33 nmcli con add con-name myconn type ethernet ifname ens33 ip4 192.168.8.110/24 gw4 192.168.8.1 dns4 114.114.114.114 nmcli con reload nmcli con up ens33 复制代码 DNS 解析百度网站域名（www.baidu.com）： nslookup www.baidu.com 复制代码 查看 DNS 服务器的配置： cat /etc/resolv.conf 复制代码 关闭 NetworkManager 服务： systemctl stop NetworkManager 复制代码 查看 NetworkManager 服务状态： systemctl status NetworkManager 复制代码 开启 NetworkManager 服务： systemctl start NetworkManager 复制代码 11 traceroute 追踪百度网站域名（www.baidu.com）：\ntraceroute www.baidu.com 复制代码 ","date":"2025-03-15T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/%E7%BD%91%E7%BB%9C%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E6%8E%92%E9%99%A4%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0/a_hu_da3efd0062f9c98b.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/%E7%BD%91%E7%BB%9C%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B%E6%8E%92%E9%99%A4%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0/","title":"网络故障检测排除实践笔记"},{"content":"文件权限安全管理与配置概述 一、文件权限安全管理与配置的概述 1. 核心目标 ==‌权限分层控制‌==：通过用户（user）、群组（group）、其他人（others）三级权限划分，实现差异化访问控制。 ==‌数据安全保障‌==：防止未授权访问、篡改或泄露，确保文件完整性及系统安全性。 ==‌最小权限原则‌==：仅授予用户完成工作所需的最低权限，降低安全风险。 2. 应用场景 ==‌企业数据隔离‌==：保护敏感数据（如财务、研发资料）仅限授权人员访问。 ==\u0026amp;zwnxj;系统文件防护‌==：限制关键系统文件（如 /etc/passwd）的修改权限，避免误操作或攻击。 ==‌共享协作管理‌==：通过群组权限实现团队文件共享与协同编辑。 二、文件权限核心知识体系 1. 权限管理主体 身份类型 定义 典型操作示例 ==‌用户（user）‌== 文件创建者/拥有者 chown alice file.txt ==‌群组（group）‌== 关联用户组（共享权限的集合） chgrp developers project/ ==‌其他人（others）‌== 非拥有者且非群组成员的用户 默认禁止访问敏感目录（如 /home） 2. 文件系统底层机制 ==‌inode‌== 存储文件元数据：权限位、时间戳、拥有者、大小、数据块指针。 查看命令：ls -i file.txt → 显示inode编号。 ==‌block‌== 实际存储文件内容（文本、二进制数据等）。 大小通常为4KB（可通过 dumpe2fs 查看具体配置）。 ==‌superblock‌== 记录文件系统全局信息：总inode/block数量、空闲状态等。 损坏修复：fsck 工具依赖superblock副本恢复文件系统。 三、权限配置实操指南 1. 查看与解析权限 1 ls -l /var/log/syslog # 输出示例：-rw-r----- 1 root adm 1024 Jun 5 10:00 syslog 权限字段分解‌： rw- r\u0026ndash; \u0026mdash; ↓ ↓ ↓ 类型 用户权限 群组权限 其他人权限 （-=文件，d=目录；r=读，w=写，x=执行） 变更文件归属 1 2 chown -R alice:devteam /project/ # 递归修改目录拥有者为alice，群组为devteam chgrp auditors budget.xlsx # 修改文件群组为auditors 权限精细化配置 1 chmod 750 script.sh # 解析：7(rwx)=用户，5(r-x)=群组，0(---)=其他人 符号模式（动态调整）\n1 2 chmod g+w,o-rwx *.conf # 为群组添加写权限，移除其他人所有权限 chmod a+x backup.sh # 为所有用户添加执行权限 特殊权限管理 权限标志 作用 设置方法 典型场景 ‌SUID‌ 以文件拥有者身份执行 chmod u+s /usr/bin/passwd 允许普通用户修改自身密码 ‌SGID‌ 继承目录群组的文件 chmod g+s /shared/ 团队共享目录自动归属 ‌Sticky Bit‌ 仅允许文件拥有者删除 chmod o+t /tmp/ 防止用户误删他人临时文件 四、安全加固建议 ‌敏感目录防护‌ 1 2 chmod 700 /home/user_private/ # 仅拥有者可读写执行 chmod 1777 /public_upload/ # 开放读写但禁止非所有者删除 ‌审计与监控‌ 1 2 auditctl -w /etc/ -p wa -k sysconf_changes # 监控/etc目录写入\u0026amp;属性变更 ausearch -k sysconf_changes # 查询相关审计日志 ‌自动化策略‌ 使用umask 027（默认权限750）全局控制新建文件权限。 定期运行脚本检查异常权限文件： 1 2 find / -perm -4000 -ls # 查找所有SUID文件 find / -type d -perm -022 -ls # 查找全局可写目录 文件权限安全管理与配置任务 ‌在根目录/下创建名为data的目录。‌ 1 sudo mkdir /data ‌在/data目录下创建名为testfile的目录。‌ 1 sudo mkdir /data/testfile ‌在/data/testfile目录下创建一个名为hello的文件。‌ 1 touch /data/testfile/hello ‌在/data目录下查看所有文件信息（包含权限等信息）。‌ 1 ls -l /data ‌将文件名为hello的文件进行拷贝，新的拷贝文件名为hello_test。‌ 1 cp /data/testfile/hello /data/testfile/hello_test ‌修改hello文件所属拥有者，改为bin。‌ 1 sudo chown bin /data/testfile/hello 修改hello_test文件所属组，改为users。‌ 1 sudo chgrp users /data/testfile/hello_test ‌将testfile目录权限修改为rwx-wx-w-。‌ 1 sudo chmod 756 /data/testfile ‌将testfile目录其他人权限中增加r权限。‌ 1 sudo chmod 757 /data/testfile ‌将testfile目录所有权限都删除w权限。‌ 1 sudo chmod 555 /data/testfile ","date":"2025-03-15T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E4%B8%8E%E9%85%8D%E7%BD%AE/a_hu_64fe278acfdef2aa.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E4%B8%8E%E9%85%8D%E7%BD%AE/","title":"文件权限安全管理与配置"},{"content":"文件系统安全配置与管理操作手册 🖥️ 任务背景 某教育科技公司因业务数据激增，需新增==‌4TB机械硬盘‌==存储教学资源。作为系统管理员，需完成以下核心工作：\n磁盘物理安装与识别 分区方案设计（需兼容未来扩展） 文件系统创建与安全配置 持久化挂载与权限控制 🛠️ 环境准备 项目 说明 操作系统 Linux Kernel 5.4+ 磁盘类型 4TB 机械硬盘（SATA接口） 分区要求 支持超过2TB的GPT分区 安全等级 满足ISO 27001存储安全标准 文件系统安全配置与管理总结 一、任务背景与目标 ==‌背景‌==：公司专注于教材开发及教学资源建设，随着业务增长，现有存储设备容量不足。 ==‌目标‌==：为新采购的4T磁盘进行安全配置与管理，确保数据安全。 二、任务流程与关键点 1. 检查磁盘情况 1 2 # 查看磁盘拓扑结构 lsblk -o NAME,SIZE,FSTYPE,MOUNTPOINT 1 2 # 查看设备UUID信息 blkid /dev/sdb 1 2 # 查看分区表类型 sudo parted -l | grep \u0026#34;Partition Table\u0026#34; 2. 磁盘分区操作（GPT方案） 1 2 3 4 5 sudo gdisk /dev/sdb 操作序列： n→[Enter]→[Enter]→+1G→8300 n→[Enter]→[Enter]→+2G→8300 p→w→y 3. 创建文件系统 1 2 3 4 5 #XFS文件系统（1GB分区） sudo mkfs.xfs -f /dev/sdb1 #ext4文件系统（2GB分区） sudo mkfs.ext4 -m 5 /dev/sdb2 4. 挂载配置 1 2 3 4 5 6 7 8 9 10 # 创建挂载点目录 sudo mkdir -p /data/{xfs,ext4} # 临时挂载测试 sudo mount /dev/sdb1 /data/xfs sudo mount /dev/sdb2 /data/ext4 # 永久挂载配置（/etc/fstab示例） UUID=xxxxxx /data/xfs xfs defaults,nosuid,noexec 0 0 UUID=yyyyyy /data/ext4 ext4 defaults,usrquota 0 0 三、磁盘配额管理 1. ext4配额配置 1 2 3 4 5 6 # 初始化配额数据库 sudo quotacheck -cug /data/ext4 # 启用配额 sudo quotaon /data/ext4 # 设置用户配额（限制500MB） sudo setquota -u user1 500M 550M 0 0 /data/ext4 2. XFS配额配置 1 2 3 4 # 启用配额支持 sudo xfs_quota -x -c \u0026#34;enable\u0026#34; /data/xfs # 设置项目配额（限制1TB） echo \u0026#34;PRJ_001 1000000\u0026#34; | sudo xfs_quota -x -c \u0026#34;limit -p bhard=1T\u0026#34; /data/xfs 四、工具对比与选择策略 fdisk vs gdisk 核心差异 特性 fdisk (MBR) gdisk (GPT) 最大磁盘容量 2TB 18EB 分区数量 4主分区 128主分区 分区表备份 无 主副本+备份 UEFI启动支持 不支持 必需 企业级数据存储 不推荐 推荐 五、最佳实践与建议 1‌. 分区保留空间‌\n1 2 # 保留5%空间（ext4） sudo tune2fs -m 5 /dev/sdb2 2‌. 安全挂载选项‌\nnodev: 禁用设备文件 nosuid: 禁止特权程序 noexec: 阻止二进制执行 自动化监控脚本‌ 1 2 3 #!/bin/bash DF_OUTPUT=$(df -h | grep \u0026#34;/data\u0026#34;) echo \u0026#34;$(date) - Disk Usage:\\n$DF_OUTPUT\u0026#34; \u0026gt;\u0026gt; /var/log/disk_monitor.log 课后作业 检查磁盘情况 使用 lsblk 命令查看磁盘分割状态，这将列出所有块设备及其挂载点。\n使用 blkid 命令列出设备的 UUID 等参数，这有助于识别磁盘及其分区。\n使用 parted /dev/sda print 命令列出磁盘 /dev/sda 的分割表类型与分割信息，注意这里假设 /dev/sda 是要检查的磁盘，根据实际情况可能需要替换为其他磁盘标识符。\n装入硬盘 此步骤通常涉及将新硬盘连接到系统并识别它，但具体命令未给出，因为这通常是通过硬件连接完成的，并且系统会在启动时自动识别新硬件。\n对装入的硬盘进行分区（在 gdisk 操作界面下操作） 使用 gdisk /dev/sdb 命令打开新装入硬盘 /dev/sdb 的分割操作界面。\n输入 ? 查询 gdisk 所有命令，了解可用的操作。\n输入 p 打印该设备的当前分割情况，以确认分区前的状态。\n输入以下命令创建一个 1GB 左右的分区：\nn：新建分区 p：选择主分区 1：分区号为 1 +1G：分区大小为 1GB 输入以下命令再创建一个 2GB 左右的分区：\nn：新建分区 p：选择主分区 2：分区号为 2 +2G：分区大小为 2GB 输入 p 再次打印该设备的分割情况，以确认分区后的状态。\n输入 w 保存退出，这将写入分区表并退出 gdisk。\n建立文件系统 使用 mkfs.xfs /dev/sdb1 命令将创建好的 1GB 左右分区建立为 xfs 文件系统。\n使用 mkfs.ext4 /dev/sdb2 命令将创建好的 2GB 左右分区建立为 ext4 文件系统。\n","date":"2025-03-15T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/a_hu_2f92e10a6f45e482.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/","title":"文件系统安全配置与管理"},{"content":"","date":"2025-03-15T00:41:18+08:00","permalink":"https://korriszz.github.io/hugo-dev/p/cloudcomputingclatform/","title":"CloudComputingClatform"},{"content":" 新建网页 hugo new content post/**网页名称**/index.zh-cn.md 复制代码 本地查看网页 hugo server -D 复制代码 3. 把当前工作目录下所有修改过的文件、新创建的文件以及被删除的文件添加到暂存区 git add . 复制代码 把暂存区里的内容提交到本地仓库 git commit -m \"update\" 复制代码 将本地仓库中的提交推送到远程仓库 git push 复制代码 引用 Hugo 是一款热门的开源静态网站生成框架，官网突出其速度快、功能丰富等优势 网页样式引用hugo参考链接\n站轻量级和快速。所有样式都是用 SCSS 编写的，脚本是用普通 JavaScript 编写的。 博客主题stack参考链接\nMarkdown 是一种轻量级标记语言，它允许你使用易读易写的纯文本格式编写文档，然后转换成有效的 HTML 文档。 网页源码使用markdown语言参考链接\n发牢骚 Wildest dreams, ah-aah, haa 最狂野不羁的梦境之中\nI said, \u0026ldquo;No one has to know what we do\u0026rdquo; 我说\u0026quot;没人会发觉我们的所作所为\u0026quot;\nWildest Dreams - Taylor Swift\n","date":"2025-03-11T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/hugo%E4%B8%8A%E4%BC%A0github/a_hu_3a496f167be1eb4a.JPG","permalink":"https://korriszz.github.io/hugo-dev/p/hugo%E4%B8%8A%E4%BC%A0github/","title":"Hugo上传GitHub"},{"content":" 木马文件创建 创建一个包含恶意代码的 PHP 文件作为一句话木马。此代码允许攻击者通过 POST 方式传递指令，在服务器端执行任意 PHP 代码，为后续入侵提供入口。 网站上传过程 在 DVWA 网站的低安全设置下，直接上传该木马文件。由于低安全级别对上传文件的验证机制宽松，未严格检查文件类型和内容，木马文件得以成功上传至服务器指定目录。 提权与后门建立 利用中国蚁剑工具，通过上传的木马文件获取服务器更高权限。提权成功后，在网站内部创建一个新的后门文件，并按照 “学号 + 姓名.txt” 的格式命名，如 “26 童盼盼.txt”，方便攻击者后续持续访问和控制服务器，窃取敏感信息或进行其他恶意操作。 操作过程 第一步：木马文件创建 引用 参考链接\n思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n","date":"2025-03-11T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/web%E6%B8%97%E9%80%8F%E4%BD%8E%E5%AE%89%E5%85%A8%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/head_hu_d25c91250f4be5dd.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/web%E6%B8%97%E9%80%8F%E4%BD%8E%E5%AE%89%E5%85%A8%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/","title":"WEB渗透低安全文件上传"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu_2307260c751d0e0b.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu_c1ca39d792aee4ab.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://korriszz.github.io/hugo-dev/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://korriszz.github.io/hugo-dev/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu_27b8954607cdb515.jpg","permalink":"https://korriszz.github.io/hugo-dev/p/emoji-support/","title":"Emoji Support"}]